stdout of test 'mergepart31` in directory 'sql/test/merge-partitions` itself:


# 11:53:07 >  
# 11:53:07 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-37085" "--port=38271"
# 11:53:07 >  

#START TRANSACTION;
#CREATE MERGE TABLE splitted (stamp TIMESTAMP, val INT) PARTITION BY RANGE ON (stamp);
#CREATE TABLE first_decade (stamp TIMESTAMP, val INT);
#CREATE TABLE second_decade (stamp TIMESTAMP, val INT);
#CREATE TABLE third_decade (stamp TIMESTAMP, val INT);
#ALTER TABLE splitted ADD TABLE first_decade AS PARTITION FROM TIMESTAMP '2000-01-01 00:00:00' TO TIMESTAMP '2010-01-01 00:00:00';
#ALTER TABLE splitted ADD TABLE second_decade AS PARTITION FROM TIMESTAMP '2010-01-01 00:00:00' TO TIMESTAMP '2020-01-01 00:00:00';
#ALTER TABLE splitted ADD TABLE third_decade AS PARTITION FROM TIMESTAMP '2020-01-01 00:00:00' TO RANGE MAXVALUE WITH NULL VALUES;
#INSERT INTO splitted VALUES (TIMESTAMP '2000-01-01 00:00:00', 1), (TIMESTAMP '2002-12-03 20:00:00', 2), (TIMESTAMP '2012-05-12 21:01:00', 3), (TIMESTAMP '2019-12-12 23:59:59', 4);
[ 4	]
#INSERT INTO splitted VALUES (TIMESTAMP '2020-01-01 00:00:00', 5), (NULL, 6);
[ 2	]
#plan select * from splitted where stamp = TIMESTAMP '2020-01-01 00:00:00';
% .plan # table_name
% rel # name
% clob # type
% 70 # length
project (
| select (
| | table(sys.third_decade) [ "splitted"."stamp" ] COUNT 
| ) [ "splitted"."stamp" = timestamp(7) "2020-01-01 00:00:00.000000" ]
) [ tinyint "1" ]
#plan select 1 from splitted where stamp IN (TIMESTAMP '2000-01-01 00:00:00', TIMESTAMP '2000-02-01 00:00:00');
% .plan # table_name
% rel # name
% clob # type
% 142 # length
project (
| select (
| | table(sys.first_decade) [ "splitted"."stamp" ] COUNT 
| ) [ "splitted"."stamp" in (timestamp(7) "2000-01-01 00:00:00.000000" as "%2"."%2", timestamp(7) "2000-02-01 00:00:00.000000" as "%3"."%3") ]
) [ tinyint "1" ]
#plan select 1 from splitted where stamp IN (TIMESTAMP '2000-01-01 00:00:00', TIMESTAMP '2010-01-01 00:00:00');
% .plan # table_name
% rel # name
% clob # type
% 144 # length
union (
| project (
| | select (
| | | table(sys.first_decade) [ "first_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | ) [ "splitted"."stamp" in (timestamp(7) "2000-01-01 00:00:00.000000" as "%2"."%2", timestamp(7) "2010-01-01 00:00:00.000000" as "%3"."%3") ]
| ) [ tinyint "1" ],
| project (
| | select (
| | | table(sys.second_decade) [ "second_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | ) [ "splitted"."stamp" in (timestamp(7) "2000-01-01 00:00:00.000000" as "%2"."%2", timestamp(7) "2010-01-01 00:00:00.000000" as "%3"."%3") ]
| ) [ tinyint "1" ]
) [ "%6"."%6" ]
#plan select 1 from splitted where stamp IN (TIMESTAMP '2000-02-01 00:00:00', TIMESTAMP '2010-02-01 00:00:00', TIMESTAMP '2020-02-01 00:00:00'); --nothing gets pruned
% .plan # table_name
% rel # name
% clob # type
% 202 # length
union (
| union (
| | project (
| | | select (
| | | | table(sys.first_decade) [ "first_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | | ) [ "splitted"."stamp" in (timestamp(7) "2000-02-01 00:00:00.000000" as "%2"."%2", timestamp(7) "2010-02-01 00:00:00.000000" as "%3"."%3", timestamp(7) "2020-02-01 00:00:00.000000" as "%4"."%4") ]
| | ) [ tinyint "1" ],
| | project (
| | | select (
| | | | table(sys.second_decade) [ "second_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | | ) [ "splitted"."stamp" in (timestamp(7) "2000-02-01 00:00:00.000000" as "%2"."%2", timestamp(7) "2010-02-01 00:00:00.000000" as "%3"."%3", timestamp(7) "2020-02-01 00:00:00.000000" as "%4"."%4") ]
| | ) [ tinyint "1" ]
| ) [ "%11"."%11" ],
| project (
| | select (
| | | table(sys.third_decade) [ "third_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | ) [ "splitted"."stamp" in (timestamp(7) "2000-02-01 00:00:00.000000" as "%2"."%2", timestamp(7) "2010-02-01 00:00:00.000000" as "%3"."%3", timestamp(7) "2020-02-01 00:00:00.000000" as "%4"."%4") ]
| ) [ tinyint "1" ]
) [ "%10"."%10" ]
#plan select 1 from splitted where stamp BETWEEN TIMESTAMP '2020-01-01 00:00:00' AND TIMESTAMP '2020-10-01 00:00:00'; --only third child passes
% .plan # table_name
% rel # name
% clob # type
% 125 # length
project (
| select (
| | table(sys.third_decade) [ "splitted"."stamp" ] COUNT 
| ) [ timestamp(7) "2020-01-01 00:00:00.000000" <= "splitted"."stamp" <= timestamp(7) "2020-10-01 00:00:00.000000" BETWEEN  ]
) [ tinyint "1" ]
#plan select 1 from splitted where stamp NOT BETWEEN TIMESTAMP '2020-01-01 00:00:00' AND TIMESTAMP '2020-10-01 00:00:00'; --third child pruned
% .plan # table_name
% rel # name
% clob # type
% 131 # length
union (
| project (
| | select (
| | | table(sys.first_decade) [ "first_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | ) [ timestamp(7) "2020-01-01 00:00:00.000000" ! <= "splitted"."stamp" ! <= timestamp(7) "2020-10-01 00:00:00.000000" BETWEEN  ]
| ) [ tinyint "1" ],
| project (
| | select (
| | | table(sys.second_decade) [ "second_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | ) [ timestamp(7) "2020-01-01 00:00:00.000000" ! <= "splitted"."stamp" ! <= timestamp(7) "2020-10-01 00:00:00.000000" BETWEEN  ]
| ) [ tinyint "1" ]
) [ "%3"."%3" ]
#plan select 1 from splitted where stamp BETWEEN TIMESTAMP '2010-01-01 00:00:00' AND TIMESTAMP '2020-03-01 00:00:00'; --first child pruned
% .plan # table_name
% rel # name
% clob # type
% 127 # length
union (
| project (
| | select (
| | | table(sys.second_decade) [ "second_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | ) [ timestamp(7) "2010-01-01 00:00:00.000000" <= "splitted"."stamp" <= timestamp(7) "2020-03-01 00:00:00.000000" BETWEEN  ]
| ) [ tinyint "1" ],
| project (
| | select (
| | | table(sys.third_decade) [ "third_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | ) [ timestamp(7) "2010-01-01 00:00:00.000000" <= "splitted"."stamp" <= timestamp(7) "2020-03-01 00:00:00.000000" BETWEEN  ]
| ) [ tinyint "1" ]
) [ "%3"."%3" ]
#plan select 1 from splitted where stamp BETWEEN TIMESTAMP '2000-02-01 00:00:00' AND TIMESTAMP '2020-03-01 00:00:00'; --nothing gets pruned
% .plan # table_name
% rel # name
% clob # type
% 129 # length
union (
| union (
| | project (
| | | select (
| | | | table(sys.first_decade) [ "first_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | | ) [ timestamp(7) "2000-02-01 00:00:00.000000" <= "splitted"."stamp" <= timestamp(7) "2020-03-01 00:00:00.000000" BETWEEN  ]
| | ) [ tinyint "1" ],
| | project (
| | | select (
| | | | table(sys.second_decade) [ "second_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | | ) [ timestamp(7) "2000-02-01 00:00:00.000000" <= "splitted"."stamp" <= timestamp(7) "2020-03-01 00:00:00.000000" BETWEEN  ]
| | ) [ tinyint "1" ]
| ) [ "%5"."%5" ],
| project (
| | select (
| | | table(sys.third_decade) [ "third_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | ) [ timestamp(7) "2000-02-01 00:00:00.000000" <= "splitted"."stamp" <= timestamp(7) "2020-03-01 00:00:00.000000" BETWEEN  ]
| ) [ tinyint "1" ]
) [ "%4"."%4" ]
#plan select 1 from splitted where stamp NOT BETWEEN TIMESTAMP '2000-02-01 00:00:00' AND TIMESTAMP '2020-03-01 00:00:00'; --all children pruned
% .plan # table_name
% rel # name
% clob # type
% 23 # length
project (
| select (
| |  [ boolean "true" ]
| ) [ boolean "false" ]
) [ tinyint "1" ]
#select * from splitted where stamp NOT BETWEEN TIMESTAMP '2000-02-01 00:00:00' AND TIMESTAMP '2020-03-01 00:00:00';
% .splitted,	.splitted # table_name
% stamp,	val # name
% timestamp,	int # type
% 26,	1 # length
#plan select 1 from splitted where stamp > TIMESTAMP '2010-03-01 00:00:00'; --first child pruned
% .plan # table_name
% rel # name
% clob # type
% 87 # length
union (
| project (
| | select (
| | | table(sys.second_decade) [ "second_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | ) [ "splitted"."stamp" > timestamp(7) "2010-03-01 00:00:00.000000" ]
| ) [ tinyint "1" ],
| project (
| | select (
| | | table(sys.third_decade) [ "third_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | ) [ "splitted"."stamp" > timestamp(7) "2010-03-01 00:00:00.000000" ]
| ) [ tinyint "1" ]
) [ "%3"."%3" ]
#plan select 1 from splitted where stamp <= TIMESTAMP '2009-01-01 00:00:00';  --only first child passes
% .plan # table_name
% rel # name
% clob # type
% 71 # length
project (
| select (
| | table(sys.first_decade) [ "splitted"."stamp" ] COUNT 
| ) [ "splitted"."stamp" <= timestamp(7) "2009-01-01 00:00:00.000000" ]
) [ tinyint "1" ]
#plan select 1 from splitted where stamp >= TIMESTAMP '2010-01-01 00:00:00' AND stamp < TIMESTAMP '2019-01-01 00:00:00';
% .plan # table_name
% rel # name
% clob # type
% 124 # length
project (
| select (
| | table(sys.second_decade) [ "splitted"."stamp" ] COUNT 
| ) [ timestamp(7) "2010-01-01 00:00:00.000000" <= "splitted"."stamp" < timestamp(7) "2019-01-01 00:00:00.000000" BETWEEN  ]
) [ tinyint "1" ]
#plan select 1 from splitted where stamp <= TIMESTAMP '2020-10-01 00:00:00'; --nothing gets pruned
% .plan # table_name
% rel # name
% clob # type
% 89 # length
union (
| union (
| | project (
| | | select (
| | | | table(sys.first_decade) [ "first_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | | ) [ "splitted"."stamp" <= timestamp(7) "2020-10-01 00:00:00.000000" ]
| | ) [ tinyint "1" ],
| | project (
| | | select (
| | | | table(sys.second_decade) [ "second_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | | ) [ "splitted"."stamp" <= timestamp(7) "2020-10-01 00:00:00.000000" ]
| | ) [ tinyint "1" ]
| ) [ "%5"."%5" ],
| project (
| | select (
| | | table(sys.third_decade) [ "third_decade"."stamp" as "splitted"."stamp" ] COUNT 
| | ) [ "splitted"."stamp" <= timestamp(7) "2020-10-01 00:00:00.000000" ]
| ) [ tinyint "1" ]
) [ "%4"."%4" ]
#plan select 1 from splitted where stamp < TIMESTAMP '2000-01-01 00:00:00'; --all children pruned
% .plan # table_name
% rel # name
% clob # type
% 23 # length
project (
| select (
| |  [ boolean "true" ]
| ) [ boolean "false" ]
) [ tinyint "1" ]
#plan select 1 from splitted where stamp <= TIMESTAMP '2000-01-01 00:00:00'; --only first child passes
% .plan # table_name
% rel # name
% clob # type
% 71 # length
project (
| select (
| | table(sys.first_decade) [ "splitted"."stamp" ] COUNT 
| ) [ "splitted"."stamp" <= timestamp(7) "2000-01-01 00:00:00.000000" ]
) [ tinyint "1" ]
#plan select 1 from splitted where stamp is null; --only third passes
% .plan # table_name
% rel # name
% clob # type
% 57 # length
project (
| select (
| | table(sys.third_decade) [ "splitted"."stamp" ] COUNT 
| ) [ "splitted"."stamp" * = timestamp(7) "NULL" ]
) [ tinyint "1" ]
#plan select 1 from splitted where stamp is null and stamp < TIMESTAMP '2008-01-01 00:00:00'; --all children pruned
% .plan # table_name
% rel # name
% clob # type
% 23 # length
project (
| select (
| |  [ boolean "true" ]
| ) [ boolean "false" ]
) [ tinyint "1" ]
#ALTER TABLE splitted DROP TABLE second_decade;
#ALTER TABLE splitted DROP TABLE third_decade;
#plan select 1 from splitted where stamp = TIMESTAMP '2010-01-01 00:00:00';
% .plan # table_name
% rel # name
% clob # type
% 23 # length
project (
| select (
| |  [ boolean "true" ]
| ) [ boolean "false" ]
) [ tinyint "1" ]
#select 1 from splitted where stamp = TIMESTAMP '2010-01-01 00:00:00';
% .%2 # table_name
% %2 # name
% tinyint # type
% 1 # length
#CREATE MERGE TABLE splitted2 (stamp INT, val INT) PARTITION BY VALUES ON (stamp);
#CREATE TABLE first_decade2 (stamp INT, val INT);
#CREATE TABLE second_decade2 (stamp INT, val INT);
#CREATE TABLE third_decade2 (stamp INT, val INT);
#ALTER TABLE splitted2 ADD TABLE first_decade2 AS PARTITION IN (1,2);
#ALTER TABLE splitted2 ADD TABLE second_decade2 AS PARTITION IN (3,4) WITH NULL VALUES;
#ALTER TABLE splitted2 ADD TABLE third_decade2 AS PARTITION IN (5,6);
#INSERT INTO splitted2 VALUES (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (NULL, 6);
[ 6	]
#plan select * from splitted2 where stamp = 5;
% .plan # table_name
% rel # name
% clob # type
% 59 # length
project (
| select (
| | table(sys.third_decade2) [ "splitted2"."stamp" ] COUNT 
| ) [ "splitted2"."stamp" = int "5" ]
) [ tinyint "1" ]
#plan select 1 from splitted2 where val = 1; /* nothing gets pruned */
% .plan # table_name
% rel # name
% clob # type
% 88 # length
union (
| union (
| | project (
| | | select (
| | | | table(sys.first_decade2) [ "first_decade2"."val" as "splitted2"."val" ] COUNT 
| | | ) [ "splitted2"."val" = int "1" ]
| | ) [ tinyint "1" ],
| | project (
| | | select (
| | | | table(sys.second_decade2) [ "second_decade2"."val" as "splitted2"."val" ] COUNT 
| | | ) [ "splitted2"."val" = int "1" ]
| | ) [ tinyint "1" ]
| ) [ "%5"."%5" ],
| project (
| | select (
| | | table(sys.third_decade2) [ "third_decade2"."val" as "splitted2"."val" ] COUNT 
| | ) [ "splitted2"."val" = int "1" ]
| ) [ tinyint "1" ]
) [ "%4"."%4" ]
#plan select 1 from splitted2 where stamp is null; --only second child passes
% .plan # table_name
% rel # name
% clob # type
% 60 # length
project (
| select (
| | table(sys.second_decade2) [ "splitted2"."stamp" ] COUNT 
| ) [ "splitted2"."stamp" * = int "NULL" ]
) [ tinyint "1" ]
#plan select 1 from splitted2 where stamp is null and stamp in (3,4,5); --all children pruned
% .plan # table_name
% rel # name
% clob # type
% 23 # length
project (
| select (
| |  [ boolean "true" ]
| ) [ boolean "false" ]
) [ tinyint "1" ]
#plan select 1 from splitted2 where stamp is null and stamp in (5,6); --all children pruned
% .plan # table_name
% rel # name
% clob # type
% 23 # length
project (
| select (
| |  [ boolean "true" ]
| ) [ boolean "false" ]
) [ tinyint "1" ]
#plan select 1 from splitted2 where stamp = 10; --all children pruned
% .plan # table_name
% rel # name
% clob # type
% 23 # length
project (
| select (
| |  [ boolean "true" ]
| ) [ boolean "false" ]
) [ tinyint "1" ]
#select 1 from splitted2 where stamp = 10;
% .%2 # table_name
% %2 # name
% tinyint # type
% 1 # length
#plan select 1 from splitted2 where stamp in (2,1); --only first child passes
% .plan # table_name
% rel # name
% clob # type
% 75 # length
project (
| select (
| | table(sys.first_decade2) [ "splitted2"."stamp" ] COUNT 
| ) [ "splitted2"."stamp" in (int "2" as "%2"."%2", int "1" as "%3"."%3") ]
) [ tinyint "1" ]
#plan select 1 from splitted2 where stamp in (4); --only second child passes
% .plan # table_name
% rel # name
% clob # type
% 60 # length
project (
| select (
| | table(sys.second_decade2) [ "splitted2"."stamp" ] COUNT 
| ) [ "splitted2"."stamp" = int "4" ]
) [ tinyint "1" ]
#plan select 1 from splitted2 where stamp in (5,6) and stamp in (6,7); --only third child passes
% .plan # table_name
% rel # name
% clob # type
% 144 # length
project (
| select (
| | table(sys.third_decade2) [ "splitted2"."stamp" ] COUNT 
| ) [ "splitted2"."stamp" in (int "5" as "%2"."%2", int "6" as "%3"."%3"), "splitted2"."stamp" in (int "6" as "%5"."%5", int "7" as "%6"."%6") ]
) [ tinyint "1" ]
#plan select 1 from splitted2 where stamp in (5,6) and stamp > 100; --only third child passes
% .plan # table_name
% rel # name
% clob # type
% 108 # length
project (
| select (
| | table(sys.third_decade2) [ "splitted2"."stamp" ] COUNT 
| ) [ "splitted2"."stamp" > int "100", "splitted2"."stamp" in (int "5" as "%2"."%2", int "6" as "%3"."%3") ]
) [ tinyint "1" ]
#plan select 1 from splitted2 where stamp in (1,2,3); --all children pruned
% .plan # table_name
% rel # name
% clob # type
% 23 # length
project (
| select (
| |  [ boolean "true" ]
| ) [ boolean "false" ]
) [ tinyint "1" ]
#plan select 1 from splitted2 where stamp in (7,8); --all children pruned
% .plan # table_name
% rel # name
% clob # type
% 23 # length
project (
| select (
| |  [ boolean "true" ]
| ) [ boolean "false" ]
) [ tinyint "1" ]
#select 1 from splitted2 where stamp in (7,8); --all children pruned
% .%5 # table_name
% %5 # name
% tinyint # type
% 1 # length
#ROLLBACK;

# 11:53:07 >  
# 11:53:07 >  "Done."
# 11:53:07 >  

